# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.27.0
# source: users.sql
from typing import AsyncIterator, Iterator

import sqlalchemy
import sqlalchemy.ext.asyncio

from repository import models


GET_ALL = """-- name: get_all \\:many
SELECT id, first_name, last_name FROM users
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def get_all(self) -> Iterator[models.User]:
        result = self._conn.execute(sqlalchemy.text(GET_ALL))
        for row in result:
            yield models.User(
                id=row[0],
                first_name=row[1],
                last_name=row[2],
            )


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def get_all(self) -> AsyncIterator[models.User]:
        result = await self._conn.stream(sqlalchemy.text(GET_ALL))
        async for row in result:
            yield models.User(
                id=row[0],
                first_name=row[1],
                last_name=row[2],
            )
